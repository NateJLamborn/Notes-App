{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nate\\\\Desktop\\\\Scripts\\\\Projects\\\\Notes-App\\\\Front End\\\\src\\\\components\\\\NoteList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NoteList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchNoteData = () => {\n      var encodedURI = window.encodeURI(this.props.uri);\n      return axios.get(encodedURI).then(response => {\n        this.setState(() => {\n          return {\n            noteData: response.data\n          };\n        });\n      });\n    };\n\n    this.state = {\n      noteData: []\n    };\n  }\n\n  renderViewPage(id) {\n    var noteUrl = \"http://localhost:3000/view/\" + id;\n    window.location.href = noteUrl;\n  }\n\n  componentDidMount() {\n    this.fetchNoteData();\n  }\n\n  render() {\n    const notes = this.state.noteData.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [note.NoteTitle, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: () => this.renderViewPage(note.NoteId),\n          children: \"View Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, note.NoteId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default NoteList;","map":{"version":3,"sources":["C:/Users/Nate/Desktop/Scripts/Projects/Notes-App/Front End/src/components/NoteList.js"],"names":["React","Component","axios","NoteList","constructor","props","fetchNoteData","encodedURI","window","encodeURI","uri","get","then","response","setState","noteData","data","state","renderViewPage","id","noteUrl","location","href","componentDidMount","render","notes","map","note","NoteTitle","NoteId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,aARmB,GAQH,MAAM;AAClB,UAAIC,UAAU,GAAGC,MAAM,CAACC,SAAP,CAAiB,KAAKJ,KAAL,CAAWK,GAA5B,CAAjB;AACA,aAAOR,KAAK,CAACS,GAAN,CAAUJ,UAAV,EAAsBK,IAAtB,CAA2BC,QAAQ,IAAI;AAC5C,aAAKC,QAAL,CAAc,MAAM;AAClB,iBAAO;AACLC,YAAAA,QAAQ,EAAEF,QAAQ,CAACG;AADd,WAAP;AAGD,SAJD;AAKD,OANM,CAAP;AAOD,KAjBgB;;AAGf,SAAKC,KAAL,GAAa;AACTF,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAaDG,EAAAA,cAAc,CAACC,EAAD,EAAI;AACd,QAAIC,OAAO,GAAG,gCAAgCD,EAA9C;AACAX,IAAAA,MAAM,CAACa,QAAP,CAAgBC,IAAhB,GAAqBF,OAArB;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKjB,aAAL;AACH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKR,KAAL,CAAWF,QAAX,CAAoBW,GAApB,CAAwBC,IAAI,iBACrC;AAAA,6BACG;AAAA,mBAAMA,IAAI,CAACC,SAAX,eAAqB;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,MAAM,KAAKV,cAAL,CAAoBS,IAAI,CAACE,MAAzB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,OAAUF,IAAI,CAACE,MAAf;AAAA;AAAA;AAAA;AAAA,YADS,CAAd;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxCmC;AA2CxC,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport class NoteList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            noteData: []\r\n        }\r\n    }\r\n    \r\n    fetchNoteData = () => {\r\n        var encodedURI = window.encodeURI(this.props.uri);\r\n        return axios.get(encodedURI).then(response => {\r\n          this.setState(() => {\r\n            return {\r\n              noteData: response.data\r\n            };\r\n          });\r\n        });\r\n      };\r\n\r\n    renderViewPage(id){\r\n        var noteUrl = \"http://localhost:3000/view/\" + id\r\n        window.location.href=noteUrl\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchNoteData();\r\n    }\r\n    \r\n    render() {\r\n        const notes = this.state.noteData.map(note =>\r\n            (<div key={note.NoteId}>\r\n                <div>{note.NoteTitle}<button className='btn btn-info' onClick={() => this.renderViewPage(note.NoteId)}>View Note</button></div>\r\n            </div>)\r\n        )\r\n        return (\r\n            <div className='container'>\r\n                {notes}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoteList\r\n"]},"metadata":{},"sourceType":"module"}